(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var DrawerMenu, LazyLink, Loading, SmoothScroll, drawerMenu, lazyLink, loading, smoothScroll;

DrawerMenu = require('./app/drawer-menu');

LazyLink = require('./app/lazy-link');

SmoothScroll = require('./app/smooth-scroll');

Loading = require('./app/loading');

drawerMenu = new DrawerMenu();

lazyLink = new LazyLink();

smoothScroll = new SmoothScroll();

loading = new Loading();



},{"./app/drawer-menu":2,"./app/lazy-link":3,"./app/loading":4,"./app/smooth-scroll":5}],2:[function(require,module,exports){
var DrawerMenu, Inheritance, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Inheritance = require('./../utility/inheritance');

Support = require('./../utility/support');

DrawerMenu = (function(_super) {
  __extends(DrawerMenu, _super);

  DrawerMenu.prototype.OPEN_CLASS = 'is-open';

  DrawerMenu.prototype.FIXED_CLASS = 'jsc-pf-i';

  DrawerMenu.prototype.HIDDEN_CLASS = 'jsc-ofh-i';

  DrawerMenu.prototype.SCROLL_Y_CLASS = 'jsc-ofy-i';

  DrawerMenu.prototype.STYLE_ATTR_NAME = 'style';

  DrawerMenu.prototype.$window = $(window);

  DrawerMenu.prototype.$html = $('html');

  DrawerMenu.prototype.$body = $('body');

  DrawerMenu.prototype.$wrapper = $('#jsi-drawer-menu');

  DrawerMenu.prototype.$trigger = $('#jsi-drawer-menu-trigger');

  DrawerMenu.prototype.$targetContents = $('#jsi-drawer-menu-contents-target');

  DrawerMenu.prototype.$targetNav = $('#jsi-drawer-menu-nav-target');

  DrawerMenu.prototype.$ovarLay = $('#jsi-drawer-menu-overlay');

  DrawerMenu.prototype.$tagetAll = $([DrawerMenu.prototype.$trigger[0], DrawerMenu.prototype.$targetContents[0], DrawerMenu.prototype.$targetNav[0], DrawerMenu.prototype.$ovarLay[0]]);

  DrawerMenu.prototype.flg = false;

  function DrawerMenu() {
    this.extend(new Support());
    this.isiOS = this.isiOS();
    this.isWindows = this.isWindows();
    this.isBrowser = this.isBrowser();
    this.event = this.isEvent();
    this.attachEvent();
  }

  DrawerMenu.prototype.attachEvent = function() {
    this.$trigger.on(this.event, (function(_this) {
      return function() {
        if (!_this.flg) {
          _this.toggleSlide();
          _this.getWindowHeight();
          _this.adjustScrollPosition();
          return _this.invertFlg();
        }
      };
    })(this));
    this.$ovarLay.on(this.event, (function(_this) {
      return function() {
        if (!_this.flg) {
          _this.removeScrollPosition();
          _this.closeSlide();
          return _this.invertFlg();
        }
      };
    })(this));
    return this.$targetContents.on('webkitTransitionEnd transitionend', (function(_this) {
      return function(e) {
        if (e.originalEvent.propertyName === 'transform' || '-webkit-transform') {
          return _this.invertFlg();
        }
      };
    })(this));
  };

  DrawerMenu.prototype.invertFlg = function() {
    return this.flg = !this.flg;
  };

  DrawerMenu.prototype.toggleSlide = function() {
    return this.$tagetAll.toggleClass(this.OPEN_CLASS);
  };

  DrawerMenu.prototype.closeSlide = function() {
    return this.$tagetAll.removeClass(this.OPEN_CLASS);
  };

  DrawerMenu.prototype.getScrollPosition = function() {
    return this.scrollPosition = this.$window.scrollTop();
  };

  DrawerMenu.prototype.getWindowHeight = function() {
    return this.windowHeight = this.$window.height();
  };

  DrawerMenu.prototype.adjustScrollPosition = function() {
    if (this.$targetContents.hasClass(this.OPEN_CLASS)) {
      this.getScrollPosition();
      return this.addScrollPosition();
    } else {
      return this.removeScrollPosition();
    }
  };

  DrawerMenu.prototype.addScrollPosition = function() {
    if (this.isiOS) {
      this.$wrapper.css({
        top: -this.scrollPosition,
        height: this.scrollPosition + this.windowHeight
      });
      return this.$html.add(this.$body).addClass(this.HIDDEN_CLASS);
    } else if (this.isWindows) {
      if (this.isBrowser === 'firefox') {
        this.$body.addClass(this.SCROLL_Y_CLASS + ' ' + this.FIXED_CLASS).width('100%');
      } else {
        this.$body.addClass(this.SCROLL_Y_CLASS);
      }
      return this.$wrapper.css({
        top: -this.scrollPosition,
        height: this.scrollPosition + this.windowHeight
      });
    } else {
      this.$body.width(this.$body.width());
      return this.$body.addClass(this.HIDDEN_CLASS);
    }
  };

  DrawerMenu.prototype.removeScrollPosition = function() {
    if (this.isiOS) {
      this.$wrapper.removeAttr(this.STYLE_ATTR_NAME);
      return this.$html.add(this.$body).removeClass(this.HIDDEN_CLASS).scrollTop(this.scrollPosition);
    } else if (this.isWindows) {
      if (this.isBrowser === 'firefox') {
        this.$body.removeClass(this.SCROLL_Y_CLASS + ' ' + this.FIXED_CLASS).width('');
      } else {
        this.$body.removeClass(this.SCROLL_Y_CLASS);
      }
      this.$wrapper.removeAttr(this.STYLE_ATTR_NAME);
      return this.$html.add(this.$body).scrollTop(this.scrollPosition);
    } else {
      this.$body.width('');
      return this.$body.removeClass(this.HIDDEN_CLASS);
    }
  };

  return DrawerMenu;

})(Inheritance);

module.exports = DrawerMenu;



},{"./../utility/inheritance":6,"./../utility/support":7}],3:[function(require,module,exports){
var DrawerMenu, LazyLink, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

DrawerMenu = require('./drawer-menu');

Support = require('./../utility/support');

LazyLink = (function(_super) {
  var flg;

  __extends(LazyLink, _super);

  LazyLink.prototype.VISIBLE_CLASS = 'is-visible';

  LazyLink.prototype.DURATION = 300;

  LazyLink.prototype.$wrapper = $('#jsi-lazy-link');

  LazyLink.prototype.$trigger = LazyLink.prototype.$wrapper.find('a');

  LazyLink.prototype.$target = $('.jsc-lazy-link-target');

  flg = false;

  function LazyLink() {
    this.extend(new Support());
    this.event = this.isEvent();
    this.attachEvent();
  }

  LazyLink.prototype.attachEvent = function() {
    this.$trigger.on(this.event, (function(_this) {
      return function(e) {
        e.preventDefault();
        _this.getURL(e.currentTarget);
        _this.closeSlide();
        return _this.invertFlg();
      };
    })(this));
    this.$targetContents.on('webkitTransitionEnd transitionend', (function(_this) {
      return function() {
        if (_this.flg) {
          _this.fadeOut();
          return _this.toLink();
        }
      };
    })(this));
    return this.$window.on('load', (function(_this) {
      return function() {
        return _this.fadeIn();
      };
    })(this));
  };

  LazyLink.prototype.invertFlg = function() {
    return this.flg = !this.flg;
  };

  LazyLink.prototype.getURL = function(target) {
    return this.URL = $(target).attr('href');
  };

  LazyLink.prototype.toLink = function() {
    return setTimeout((function(_this) {
      return function() {
        return location.href = _this.URL;
      };
    })(this), this.DURATION);
  };

  LazyLink.prototype.fadeOut = function() {
    return this.$target.removeClass(this.VISIBLE_CLASS);
  };

  LazyLink.prototype.fadeIn = function() {
    return setTimeout((function(_this) {
      return function() {
        return _this.$target.addClass(_this.VISIBLE_CLASS);
      };
    })(this), 0);
  };

  return LazyLink;

})(DrawerMenu);

module.exports = LazyLink;



},{"./../utility/support":7,"./drawer-menu":2}],4:[function(require,module,exports){
var Loading;

Loading = (function() {
  Loading.prototype.ACTIVE_CLASS = 'is-active';

  Loading.prototype.DURATION = 300;

  Loading.prototype.$window = $(window);

  Loading.prototype.$targetHeader = $('#jsi-loading-header');

  Loading.prototype.$targetBg = $('#jsi-loading-bg');

  Loading.prototype.$target = $('#jsi-loading-title, #jsi-loading-logo, .jsc-loading-icon');

  function Loading() {
    this.getWindowSize();
    this.setBgPosition();
    this.addActiveClass();
    this.attachEvent();
  }

  Loading.prototype.attachEvent = function() {
    return this.$window.on('resize', (function(_this) {
      return function() {
        _this.getWindowSize();
        return _this.setBgPosition();
      };
    })(this));
  };

  Loading.prototype.getWindowSize = function() {
    this.windowHeight = this.$window.height();
    return this.windowWidth = this.$window.width();
  };

  Loading.prototype.setBgPosition = function() {
    return this.$targetBg.add(this.$targetHeader).height(this.windowHeight).end().width(this.windowWidth);
  };

  Loading.prototype.addActiveClass = function() {
    return setTimeout((function(_this) {
      return function() {
        return _this.$target.addClass(_this.ACTIVE_CLASS);
      };
    })(this), this.DURATION);
  };

  return Loading;

})();

module.exports = Loading;



},{}],5:[function(require,module,exports){
var SmoothScroll, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Support = require('./../utility/support');

SmoothScroll = (function(_super) {
  __extends(SmoothScroll, _super);

  function SmoothScroll() {
    this.DURATION = 800;
    this.EASING = 'swing';
    this.$target = $('html, body');
    this.$trigger = $('#jsi-smooth-scroll');
    this.event = this.isEvent();
    this.attachEvent();
  }

  SmoothScroll.prototype.attachEvent = function() {
    return this.$trigger.on(this.event, (function(_this) {
      return function() {
        return _this.scrollTop();
      };
    })(this));
  };

  SmoothScroll.prototype.scrollTop = function() {
    return this.$target.animate({
      scrollTop: 0
    }, this.DURATION, this.EASING);
  };

  return SmoothScroll;

})(Support);

module.exports = SmoothScroll;



},{"./../utility/support":7}],6:[function(require,module,exports){
var Inheritance,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Inheritance = (function() {
  var moduleKeywords;

  function Inheritance() {}

  moduleKeywords = ['extended', 'included'];

  Inheritance.prototype.extend = function(obj) {
    var key, value, _ref;
    for (key in obj) {
      value = obj[key];
      if (__indexOf.call(moduleKeywords, key) < 0) {
        this[key] = value;
      }
    }
    if ((_ref = obj.extended) != null) {
      _ref.apply(this);
    }
    return this;
  };

  Inheritance.prototype.include = function(obj) {
    var key, value, _ref;
    for (key in obj) {
      value = obj[key];
      if (__indexOf.call(moduleKeywords, key) < 0) {
        this.prototype[key] = value;
      }
    }
    if ((_ref = obj.included) != null) {
      _ref.apply(this);
    }
    return this;
  };

  return Inheritance;

})();

module.exports = Inheritance;



},{}],7:[function(require,module,exports){
var Support;

Support = (function() {
  var browser, userAgent;

  function Support() {}

  userAgent = window.navigator.userAgent.toLowerCase();

  browser = null;

  Support.prototype.isWindows = function() {
    return userAgent.indexOf('win') !== -1;
  };

  Support.prototype.isMac = function() {
    return userAgent.indexOf('mac') !== -1;
  };

  Support.prototype.isiPhone = function() {
    return userAgent.indexOf('iphone') !== -1;
  };

  Support.prototype.isiPad = function() {
    return userAgent.indexOf('ipad') !== -1;
  };

  Support.prototype.isiOS = function() {
    return this.isiPhone() || this.isiPad();
  };

  Support.prototype.isBrowser = function() {
    if (userAgent.indexOf('trident/7') !== -1) {
      return browser = 'ie11';
    } else if (userAgent.indexOf('chrome') !== -1) {
      return browser = 'chrome';
    } else if (userAgent.indexOf('safari') !== -1) {
      return browser = 'safari';
    } else if (userAgent.indexOf('firefox') !== -1) {
      return browser = 'firefox';
    }
  };

  Support.prototype.isEvent = function() {
    var event;
    return event = 'ontouchstart' in window ? 'touchend': 'click';
  };

  return Support;

})();

module.exports = Support;



},{}]},{},[1])


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJkZXZlbG9wL3NvdXJjZS9jb2ZmZWUvYWJvdXQuY29mZmVlIiwiZGV2ZWxvcC9zb3VyY2UvY29mZmVlL2FwcC9kcmF3ZXItbWVudS5jb2ZmZWUiLCJkZXZlbG9wL3NvdXJjZS9jb2ZmZWUvYXBwL2xhenktbGluay5jb2ZmZWUiLCJkZXZlbG9wL3NvdXJjZS9jb2ZmZWUvYXBwL2xvYWRpbmcuY29mZmVlIiwiZGV2ZWxvcC9zb3VyY2UvY29mZmVlL2FwcC9zbW9vdGgtc2Nyb2xsLmNvZmZlZSIsImRldmVsb3Avc291cmNlL2NvZmZlZS91dGlsaXR5L2luaGVyaXRhbmNlLmNvZmZlZSIsImRldmVsb3Avc291cmNlL2NvZmZlZS91dGlsaXR5L3N1cHBvcnQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsSUFBQSx3RkFBQTs7QUFBQSxVQUFBLEdBQWEsT0FBQSxDQUFRLG1CQUFSLENBQWIsQ0FBQTs7QUFBQSxRQUNBLEdBQVcsT0FBQSxDQUFRLGlCQUFSLENBRFgsQ0FBQTs7QUFBQSxZQUVBLEdBQWUsT0FBQSxDQUFRLHFCQUFSLENBRmYsQ0FBQTs7QUFBQSxPQUdBLEdBQVUsT0FBQSxDQUFRLGVBQVIsQ0FIVixDQUFBOztBQUFBLFVBS0EsR0FBaUIsSUFBQSxVQUFBLENBQUEsQ0FMakIsQ0FBQTs7QUFBQSxRQU1BLEdBQWUsSUFBQSxRQUFBLENBQUEsQ0FOZixDQUFBOztBQUFBLFlBT0EsR0FBbUIsSUFBQSxZQUFBLENBQUEsQ0FQbkIsQ0FBQTs7QUFBQSxPQVFBLEdBQWMsSUFBQSxPQUFBLENBQUEsQ0FSZCxDQUFBOzs7OztBQ0FBLElBQUEsZ0NBQUE7RUFBQTtpU0FBQTs7QUFBQSxXQUFBLEdBQWMsT0FBQSxDQUFRLDBCQUFSLENBQWQsQ0FBQTs7QUFBQSxPQUNBLEdBQVUsT0FBQSxDQUFRLHNCQUFSLENBRFYsQ0FB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OztBQUFBLG9CQTRCQSxPQUFBLEdBQVMsU0FBQSxHQUFBO0FBQ1AsUUFBQSxLQUFBO1dBQUEsS0FBQSxHQUFRLCtDQUREO0VBQUEsQ0E1QlQsQ0FBQTs7aUJBQUE7O0lBREYsQ0FBQTs7QUFBQSxNQWdDTSxDQUFDLE9BQVAsR0FBaUIsT0FoQ2pCLENBQUEiLCJmaWxlIjoiYWJvdXQuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIkRyYXdlck1lbnUgPSByZXF1aXJlICcuL2FwcC9kcmF3ZXItbWVudSdcbkxhenlMaW5rID0gcmVxdWlyZSAnLi9hcHAvbGF6eS1saW5rJ1xuU21vb3RoU2Nyb2xsID0gcmVxdWlyZSAnLi9hcHAvc21vb3RoLXNjcm9sbCdcbkxvYWRpbmcgPSByZXF1aXJlICcuL2FwcC9sb2FkaW5nJ1xuXG5kcmF3ZXJNZW51ID0gbmV3IERyYXdlck1lbnUoKVxubGF6eUxpbmsgPSBuZXcgTGF6eUxpbmsoKVxuc21vb3RoU2Nyb2xsID0gbmV3IFNtb290aFNjcm9sbCgpXG5sb2FkaW5nID0gbmV3IExvYWRpbmcoKSIsIkluaGVyaXRhbmNlID0gcmVxdWlyZSAnLi8uLi91dGlsaXR5L2luaGVyaXRhbmNlJ1xuU3VwcG9ydCA9IHJlcXVpcmUgJy4vLi4vdXRpbGl0eS9zdXBwb3J0J1xuXG5jbGFzcyBEcmF3ZXJNZW51IGV4dGVuZHMgSW5oZXJpdGFuY2VcbiAgT1BFTl9DTEFTUzogJ2lzLW9wZW4nXG4gIEZJWEVEX0NMQVNTOiAnanNjLXBmLWknXG4gIEhJRERFTl9DTEFTUzogJ2pzYy1vZmgtaSdcbiAgU0NST0xMX1lfQ0xBU1M6ICdqc2Mtb2Z5LWknXG4gIFNUWUxFX0FUVFJfTkFNRTogJ3N0eWxlJ1xuXG4gICR3aW5kb3c6ICQgd2luZG93XG4gICRodG1sOiAkICdodG1sJ1xuICAkYm9keTogJCAnYm9keSdcbiAgJHdyYXBwZXI6ICQgJyNqc2ktZHJhd2VyLW1lbnUnXG4gICR0cmlnZ2VyOiAkICcjanNpLWRyYXdlci1tZW51LXRyaWdnZXInXG4gICR0YXJnZXRDb250ZW50czogJCAnI2pzaS1kcmF3ZXItbWVudS1jb250ZW50cy10YXJnZXQnXG4gICR0YXJnZXROYXY6ICQgJyNqc2ktZHJhd2VyLW1lbnUtbmF2LXRhcmdldCdcbiAgJG92YXJMYXk6ICQgJyNqc2ktZHJhd2VyLW1lbnUtb3ZlcmxheSdcbiAgJHRhZ2V0QWxsOiAkIFtAOjokdHJpZ2dlclswXSwgQDo6JHRhcmdldENvbnRlbnRzWzBdLCBAOjokdGFyZ2V0TmF2WzBdLCBAOjokb3ZhckxheVswXV1cblxuICBmbGc6IGZhbHNlXG5cbiAgY29uc3RydWN0b3I6IC0+XG4gICAgQGV4dGVuZCBuZXcgU3VwcG9ydCgpXG4gICAgQGlzaU9TID0gQGlzaU9TKClcbiAgICBAaXNXaW5kb3dzID0gQGlzV2luZG93cygpXG4gICAgQGlzQnJvd3NlciA9IEBpc0Jyb3dzZXIoKVxuICAgIEBldmVudCA9IEBpc0V2ZW50KClcblxuICAgIEBhdHRhY2hFdmVudCgpXG5cbiAgYXR0YWNoRXZlbnQ6IC0+XG4gICAgQCR0cmlnZ2VyLm9uIEBldmVudCwgPT5cbiAgICAgIHVubGVzcyBAZmxnXG4gICAgICAgIEB0b2dnbGVTbGlkZSgpXG4gICAgICAgIEBnZXRXaW5kb3dIZWlnaHQoKVxuICAgICAgICBAYWRqdXN0U2Nyb2xsUG9zaXRpb24oKVxuICAgICAgICBAaW52ZXJ0RmxnKClcblxuICAgIEAkb3ZhckxheS5vbiBAZXZlbnQsID0+XG4gICAgICB1bmxlc3MgQGZsZ1xuICAgICAgICBAcmVtb3ZlU2Nyb2xsUG9zaXRpb24oKVxuICAgICAgICBAY2xvc2VTbGlkZSgpXG4gICAgICAgIEBpbnZlcnRGbGcoKVxuXG4gICAgQCR0YXJnZXRDb250ZW50cy5vbiAnd2Via2l0VHJhbnNpdGlvbkVuZCB0cmFuc2l0aW9uZW5kJywgKGUpID0+XG4gICAgICBpZiBlLm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lIGlzICd0cmFuc2Zvcm0nIG9yICctd2Via2l0LXRyYW5zZm9ybSdcbiAgICAgICAgQGludmVydEZsZygpXG5cbiAgaW52ZXJ0RmxnOiAtPlxuICAgIEBmbGcgPSBub3QgQGZsZ1xuXG4gIHRvZ2dsZVNsaWRlOiAtPlxuICAgIEAkdGFnZXRBbGwudG9nZ2xlQ2xhc3MgQE9QRU5fQ0xBU1NcblxuICBjbG9zZVNsaWRlOiAtPlxuICAgIEAkdGFnZXRBbGwucmVtb3ZlQ2xhc3MgQE9QRU5fQ0xBU1NcblxuICBnZXRTY3JvbGxQb3NpdGlvbjogLT5cbiAgICBAc2Nyb2xsUG9zaXRpb24gPSBAJHdpbmRvdy5zY3JvbGxUb3AoKVxuXG4gIGdldFdpbmRvd0hlaWdodDogLT5cbiAgICBAd2luZG93SGVpZ2h0ID0gQCR3aW5kb3cuaGVpZ2h0KClcblxuICBhZGp1c3RTY3JvbGxQb3NpdGlvbjogLT5cbiAgICBpZiBAJHRhcmdldENvbnRlbnRzLmhhc0NsYXNzIEBPUEVOX0NMQVNTXG4gICAgICBAZ2V0U2Nyb2xsUG9zaXRpb24oKVxuICAgICAgQGFkZFNjcm9sbFBvc2l0aW9uKClcblxuICAgIGVsc2VcbiAgICAgIEByZW1vdmVTY3JvbGxQb3NpdGlvbigpXG5cbiAgYWRkU2Nyb2xsUG9zaXRpb246IC0+XG4gICAgaWYgQGlzaU9TXG4gICAgICBAJHdyYXBwZXJcbiAgICAgICAgLmNzc1xuICAgICAgICAgIHRvcDogLUBzY3JvbGxQb3NpdGlvblxuICAgICAgICAgIGhlaWdodDogQHNjcm9sbFBvc2l0aW9uICsgQHdpbmRvd0hlaWdodFxuXG4gICAgICBAJGh0bWxcbiAgICAgICAgLmFkZCBAJGJvZHlcbiAgICAgICAgLmFkZENsYXNzIEBISURERU5fQ0xBU1NcblxuICAgIGVsc2UgaWYgQGlzV2luZG93c1xuICAgICAgaWYgQGlzQnJvd3NlciBpcyAnZmlyZWZveCdcbiAgICAgICAgQCRib2R5XG4gICAgICAgICAgLmFkZENsYXNzIEBTQ1JPTExfWV9DTEFTUyArICcgJyArIEBGSVhFRF9DTEFTU1xuICAgICAgICAgIC53aWR0aCAnMTAwJSdcblxuICAgICAgZWxzZVxuICAgICAgICBAJGJvZHlcbiAgICAgICAgICAuYWRkQ2xhc3MgQFNDUk9MTF9ZX0NMQVNTXG5cbiAgICAgIEAkd3JhcHBlclxuICAgICAgICAuY3NzXG4gICAgICAgICAgdG9wOiAtQHNjcm9sbFBvc2l0aW9uXG4gICAgICAgICAgaGVpZ2h0OiBAc2Nyb2xsUG9zaXRpb24gKyBAd2luZG93SGVpZ2h0XG5cbiAgICBlbHNlXG4gICAgICBAJGJvZHkud2lkdGggQCRib2R5LndpZHRoKClcbiAgICAgIEAkYm9keS5hZGRDbGFzcyBASElEREVOX0NMQVNTXG5cbiAgcmVtb3ZlU2Nyb2xsUG9zaXRpb246IC0+XG4gICAgaWYgQGlzaU9TXG4gICAgICBAJHdyYXBwZXIucmVtb3ZlQXR0ciBAU1RZTEVfQVRUUl9OQU1FXG5cbiAgICAgIEAkaHRtbFxuICAgICAgICAuYWRkIEAkYm9keVxuICAgICAgICAucmVtb3ZlQ2xhc3MgQEhJRERFTl9DTEFTU1xuICAgICAgICAuc2Nyb2xsVG9wIEBzY3JvbGxQb3NpdGlvblxuXG4gICAgZWxzZSBpZiBAaXNXaW5kb3dzXG4gICAgICBpZiBAaXNCcm93c2VyIGlzICdmaXJlZm94J1xuICAgICAgICBAJGJvZHlcbiAgICAgICAgLnJlbW92ZUNsYXNzIEBTQ1JPTExfWV9DTEFTUyArICcgJyArIEBGSVhFRF9DTEFTU1xuICAgICAgICAud2lkdGggJydcblxuICAgICAgZWxzZVxuICAgICAgICBAJGJvZHlcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MgQFNDUk9MTF9ZX0NMQVNTXG5cbiAgICAgIEAkd3JhcHBlci5yZW1vdmVBdHRyIEBTVFlMRV9BVFRSX05BTUVcblxuICAgICAgQCRodG1sXG4gICAgICAgIC5hZGQgQCRib2R5XG4gICAgICAgIC5zY3JvbGxUb3AgQHNjcm9sbFBvc2l0aW9uXG5cbiAgICBlbHNlXG4gICAgICBAJGJvZHkud2lkdGggJydcbiAgICAgIEAkYm9keS5yZW1vdmVDbGFzcyBASElEREVOX0NMQVNTXG5cbm1vZHVsZS5leHBvcnRzID0gRHJhd2VyTWVudVxuIiwiRHJhd2VyTWVudSA9IHJlcXVpcmUgJy4vZHJhd2VyLW1lbnUnXG5TdXBwb3J0ID0gcmVxdWlyZSAnLi8uLi91dGlsaXR5L3N1cHBvcnQnXG5cbmNsYXNzIExhenlMaW5rIGV4dGVuZHMgRHJhd2VyTWVudVxuICBWSVNJQkxFX0NMQVNTOiAnaXMtdmlzaWJsZSdcbiAgRFVSQVRJT046IDMwMFxuXG4gICR3cmFwcGVyOiAkICcjanNpLWxhenktbGluaydcbiAgJHRyaWdnZXI6IEA6OiR3cmFwcGVyLmZpbmQgJ2EnXG4gICR0YXJnZXQ6ICQgJy5qc2MtbGF6eS1saW5rLXRhcmdldCdcblxuICBmbGcgPSBmYWxzZVxuXG4gIGNvbnN0cnVjdG9yOiAoKSAtPlxuICAgIEBleHRlbmQgbmV3IFN1cHBvcnQoKVxuICAgIEBldmVudCA9IEBpc0V2ZW50KClcblxuICAgIEBhdHRhY2hFdmVudCgpXG5cbiAgYXR0YWNoRXZlbnQ6IC0+XG4gICAgQCR0cmlnZ2VyLm9uIEBldmVudCwgKGUpID0+XG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgQGdldFVSTChlLmN1cnJlbnRUYXJnZXQpXG4gICAgICBAY2xvc2VTbGlkZSgpXG4gICAgICBAaW52ZXJ0RmxnKClcblxuICAgIEAkdGFyZ2V0Q29udGVudHMub24gJ3dlYmtpdFRyYW5zaXRpb25FbmQgdHJhbnNpdGlvbmVuZCcsID0+XG4gICAgICBpZiBAZmxnXG4gICAgICAgIEBmYWRlT3V0KClcbiAgICAgICAgQHRvTGluaygpXG5cbiAgICBAJHdpbmRvdy5vbiAnbG9hZCcsID0+XG4gICAgICBAZmFkZUluKClcblxuICBpbnZlcnRGbGc6IC0+XG4gICAgQGZsZyA9IG5vdCBAZmxnXG5cbiAgZ2V0VVJMOiAodGFyZ2V0KSAtPlxuICAgIEBVUkwgPSAkKHRhcmdldCkuYXR0cignaHJlZicpXG5cbiAgdG9MaW5rOiAtPlxuICAgIHNldFRpbWVvdXQgPT5cbiAgICAgIGxvY2F0aW9uLmhyZWYgPSBAVVJMXG4gICAgLCBARFVSQVRJT05cblxuICBmYWRlT3V0OiAtPlxuICAgIEAkdGFyZ2V0LnJlbW92ZUNsYXNzIEBWSVNJQkxFX0NMQVNTXG5cbiAgZmFkZUluOiAtPlxuICAgIHNldFRpbWVvdXQgPT5cbiAgICAgIEAkdGFyZ2V0LmFkZENsYXNzIEBWSVNJQkxFX0NMQVNTXG4gICAgLCAwXG5cbm1vZHVsZS5leHBvcnRzID0gTGF6eUxpbmtcbiIsImNsYXNzIExvYWRpbmdcbiAgQUNUSVZFX0NMQVNTOiAnaXMtYWN0aXZlJ1xuICBEVVJBVElPTjogMzAwXG5cbiAgJHdpbmRvdzogJCB3aW5kb3dcbiAgJHRhcmdldEhlYWRlcjogJCAnI2pzaS1sb2FkaW5nLWhlYWRlcidcbiAgJHRhcmdldEJnOiAkICcjanNpLWxvYWRpbmctYmcnXG4gICR0YXJnZXQ6ICQgJyNqc2ktbG9hZGluZy10aXRsZSwgI2pzaS1sb2FkaW5nLWxvZ28sIC5qc2MtbG9hZGluZy1pY29uJ1xuXG4gIGNvbnN0cnVjdG9yOiAtPlxuICAgIEBnZXRXaW5kb3dTaXplKClcbiAgICBAc2V0QmdQb3NpdGlvbigpXG4gICAgQGFkZEFjdGl2ZUNsYXNzKClcbiAgICBAYXR0YWNoRXZlbnQoKVxuXG4gIGF0dGFjaEV2ZW50OiAtPlxuICAgIEAkd2luZG93Lm9uICdyZXNpemUnLCA9PlxuICAgICAgQGdldFdpbmRvd1NpemUoKVxuICAgICAgQHNldEJnUG9zaXRpb24oKVxuXG4gIGdldFdpbmRvd1NpemU6IC0+XG4gICAgQHdpbmRvd0hlaWdodCA9IEAkd2luZG93LmhlaWdodCgpXG4gICAgQHdpbmRvd1dpZHRoID0gQCR3aW5kb3cud2lkdGgoKVxuXG4gIHNldEJnUG9zaXRpb246IC0+XG4gICAgQCR0YXJnZXRCZ1xuICAgICAgLmFkZCBAJHRhcmdldEhlYWRlclxuICAgICAgLmhlaWdodCBAd2luZG93SGVpZ2h0XG4gICAgICAuZW5kKClcbiAgICAgICAgLndpZHRoIEB3aW5kb3dXaWR0aFxuXG4gIGFkZEFjdGl2ZUNsYXNzOiAtPlxuICAgIHNldFRpbWVvdXQgPT5cbiAgICAgIEAkdGFyZ2V0LmFkZENsYXNzIEBBQ1RJVkVfQ0xBU1NcbiAgICAsIEBEVVJBVElPTlxuXG5tb2R1bGUuZXhwb3J0cyA9IExvYWRpbmdcbiIsIlN1cHBvcnQgPSByZXF1aXJlICcuLy4uL3V0aWxpdHkvc3VwcG9ydCdcblxuY2xhc3MgU21vb3RoU2Nyb2xsIGV4dGVuZHMgU3VwcG9ydFxuICBjb25zdHJ1Y3RvcjogLT5cbiAgICBARFVSQVRJT04gPSA4MDBcbiAgICBARUFTSU5HID0gJ3N3aW5nJ1xuXG4gICAgQCR0YXJnZXQgPSAkICdodG1sLCBib2R5J1xuICAgIEAkdHJpZ2dlciA9ICQgJyNqc2ktc21vb3RoLXNjcm9sbCdcblxuICAgIEBldmVudCA9IEBpc0V2ZW50KClcbiAgICBAYXR0YWNoRXZlbnQoKVxuXG4gIGF0dGFjaEV2ZW50OiAtPlxuICAgIEAkdHJpZ2dlci5vbiBAZXZlbnQsID0+XG4gICAgICBAc2Nyb2xsVG9wKClcblxuICBzY3JvbGxUb3A6IC0+XG4gICAgQCR0YXJnZXQuYW5pbWF0ZVxuICAgICAgc2Nyb2xsVG9wOiAwXG4gICAgLEBEVVJBVElPTiwgQEVBU0lOR1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNtb290aFNjcm9sbCIsImNsYXNzIEluaGVyaXRhbmNlXG4gIG1vZHVsZUtleXdvcmRzID0gWydleHRlbmRlZCcsICdpbmNsdWRlZCddXG5cbiAgZXh0ZW5kOiAob2JqKSAtPlxuICAgIGZvciBrZXksIHZhbHVlIG9mIG9iaiB3aGVuIGtleSBub3QgaW4gbW9kdWxlS2V5d29yZHNcbiAgICAgIEBba2V5XSA9IHZhbHVlXG5cbiAgICBvYmouZXh0ZW5kZWQ/LmFwcGx5KEApXG4gICAgdGhpc1xuXG4gIGluY2x1ZGU6IChvYmopIC0+XG4gICAgZm9yIGtleSwgdmFsdWUgb2Ygb2JqIHdoZW4ga2V5IG5vdCBpbiBtb2R1bGVLZXl3b3Jkc1xuICAgICAgQDo6W2tleV0gPSB2YWx1ZVxuXG4gICAgb2JqLmluY2x1ZGVkPy5hcHBseShAKVxuICAgIHRoaXNcblxubW9kdWxlLmV4cG9ydHMgPSBJbmhlcml0YW5jZSIsImNsYXNzIFN1cHBvcnRcbiAgdXNlckFnZW50ID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKVxuICBicm93c2VyID0gbnVsbFxuXG4gIGlzV2luZG93czogLT5cbiAgICB1c2VyQWdlbnQuaW5kZXhPZignd2luJykgaXNudCAtMVxuXG4gIGlzTWFjOiAtPlxuICAgIHVzZXJBZ2VudC5pbmRleE9mKCdtYWMnKSBpc250IC0xXG5cbiAgaXNpUGhvbmU6IC0+XG4gICAgdXNlckFnZW50LmluZGV4T2YoJ2lwaG9uZScpIGlzbnQgLTFcblxuICBpc2lQYWQ6IC0+XG4gICAgdXNlckFnZW50LmluZGV4T2YoJ2lwYWQnKSBpc250IC0xXG5cbiAgaXNpT1M6IC0+XG4gICAgQGlzaVBob25lKCkgb3IgQGlzaVBhZCgpXG5cbiAgaXNCcm93c2VyOiAtPlxuICAgIGlmIHVzZXJBZ2VudC5pbmRleE9mKCd0cmlkZW50LzcnKSBpc250IC0xXG4gICAgICBicm93c2VyID0gJ2llMTEnXG4gICAgZWxzZSBpZiB1c2VyQWdlbnQuaW5kZXhPZignY2hyb21lJykgaXNudCAtMVxuICAgICAgYnJvd3NlciA9ICdjaHJvbWUnXG4gICAgZWxzZSBpZiB1c2VyQWdlbnQuaW5kZXhPZignc2FmYXJpJykgaXNudCAtMVxuICAgICAgYnJvd3NlciA9ICdzYWZhcmknXG4gICAgZWxzZSBpZiB1c2VyQWdlbnQuaW5kZXhPZignZmlyZWZveCcpIGlzbnQgLTFcbiAgICAgIGJyb3dzZXIgPSAnZmlyZWZveCdcblxuICBpc0V2ZW50OiAtPlxuICAgIGV2ZW50ID0gYCdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyA/ICd0b3VjaGVuZCc6ICdjbGljaydgXG5cbm1vZHVsZS5leHBvcnRzID0gU3VwcG9ydCJdfQ==