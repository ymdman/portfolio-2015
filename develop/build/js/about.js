(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var DrawerMenu, LazyLink, Loading, SmoothScroll, drawerMenu, lazyLink, loading, smoothScroll;

DrawerMenu = require('./app/drawer-menu');

LazyLink = require('./app/lazy-link');

SmoothScroll = require('./app/smooth-scroll');

Loading = require('./app/loading');

drawerMenu = new DrawerMenu();

lazyLink = new LazyLink();

smoothScroll = new SmoothScroll();

loading = new Loading();



},{"./app/drawer-menu":2,"./app/lazy-link":3,"./app/loading":4,"./app/smooth-scroll":5}],2:[function(require,module,exports){
var DrawerMenu, Inheritance, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Inheritance = require('./../utility/inheritance');

Support = require('./../utility/support');

DrawerMenu = (function(_super) {
  __extends(DrawerMenu, _super);

  DrawerMenu.prototype.OPEN_CLASS = 'is-open';

  DrawerMenu.prototype.FIXED_CLASS = 'jsc-pf-i';

  DrawerMenu.prototype.OVERFLOW_CLASS = 'jsc-ofy-i';

  DrawerMenu.prototype.STYLE_ATTR_NAME = 'style';

  DrawerMenu.prototype.$window = $(window);

  DrawerMenu.prototype.$html = $('html');

  DrawerMenu.prototype.$body = $('body');

  DrawerMenu.prototype.$wrapper = $('#jsi-drawer-menu');

  DrawerMenu.prototype.$trigger = $('#jsi-drawer-menu-trigger');

  DrawerMenu.prototype.$targetContents = $('#jsi-drawer-menu-contents-target');

  DrawerMenu.prototype.$targetNav = $('#jsi-drawer-menu-nav-target');

  DrawerMenu.prototype.$ovarLay = $('#jsi-drawer-menu-overlay');

  DrawerMenu.prototype.$tagetAll = $([DrawerMenu.prototype.$trigger[0], DrawerMenu.prototype.$targetContents[0], DrawerMenu.prototype.$targetNav[0], DrawerMenu.prototype.$ovarLay[0]]);

  DrawerMenu.prototype.flg = false;

  function DrawerMenu() {
    this.extend(new Support());
    this.isiOS = this.isiOS();
    this.isWindows = this.isWindows();
    this.isBrowser = this.isBrowser();
    this.event = this.isEvent();
    this.attachEvent();
  }

  DrawerMenu.prototype.attachEvent = function() {
    this.$trigger.on(this.event, (function(_this) {
      return function() {
        if (!_this.flg) {
          _this.toggleSlide();
          _this.getWindowHeight();
          _this.adjustScrollPosition();
          return _this.invertFlg();
        }
      };
    })(this));
    this.$ovarLay.on(this.event, (function(_this) {
      return function() {
        if (!_this.flg) {
          _this.removeScrollPosition();
          _this.closeSlide();
          return _this.invertFlg();
        }
      };
    })(this));
    return this.$targetContents.on('webkitTransitionEnd transitionend', (function(_this) {
      return function(e) {
        if (e.originalEvent.propertyName === 'transform' || '-webkit-transform') {
          return _this.invertFlg();
        }
      };
    })(this));
  };

  DrawerMenu.prototype.invertFlg = function() {
    return this.flg = !this.flg;
  };

  DrawerMenu.prototype.toggleSlide = function() {
    return this.$tagetAll.toggleClass(this.OPEN_CLASS);
  };

  DrawerMenu.prototype.closeSlide = function() {
    return this.$tagetAll.removeClass(this.OPEN_CLASS);
  };

  DrawerMenu.prototype.getScrollPosition = function() {
    return this.scrollPosition = this.$window.scrollTop();
  };

  DrawerMenu.prototype.getWindowHeight = function() {
    return this.windowHeight = this.$window.height();
  };

  DrawerMenu.prototype.adjustScrollPosition = function() {
    if (this.$targetContents.hasClass(this.OPEN_CLASS)) {
      this.getScrollPosition();
      return this.addScrollPosition();
    } else {
      return this.removeScrollPosition();
    }
  };

  DrawerMenu.prototype.addScrollPosition = function() {
    if (this.isiOS) {
      this.$wrapper.css({
        top: -this.scrollPosition,
        height: this.scrollPosition + this.windowHeight
      });
      return this.$html.add(this.$body).addClass(this.FIXED_CLASS);
    } else if (this.isWindows) {
      if (this.isBrowser === 'firefox') {
        this.$body.addClass(this.OVERFLOW_CLASS + ' ' + this.FIXED_CLASS);
      } else {
        this.$body.addClass(this.OVERFLOW_CLASS);
      }
      return this.$wrapper.css({
        top: -this.scrollPosition,
        height: this.scrollPosition + this.windowHeight
      });
    } else {
      this.$body.width(this.$body.width());
      return this.$body.addClass(this.FIXED_CLASS);
    }
  };

  DrawerMenu.prototype.removeScrollPosition = function() {
    if (this.isiOS) {
      this.$wrapper.removeAttr(this.STYLE_ATTR_NAME);
      return this.$html.add(this.$body).removeClass(this.FIXED_CLASS).scrollTop(this.scrollPosition);
    } else if (this.isWindows) {
      this.$body.removeClass(this.OVERFLOW_CLASS + ' ' + this.FIXED_CLASS);
      this.$wrapper.removeAttr(this.STYLE_ATTR_NAME);
      return this.$html.add(this.$body).scrollTop(this.scrollPosition);
    } else {
      this.$body.width('');
      return this.$body.removeClass(this.FIXED_CLASS);
    }
  };

  return DrawerMenu;

})(Inheritance);

module.exports = DrawerMenu;



},{"./../utility/inheritance":6,"./../utility/support":7}],3:[function(require,module,exports){
var DrawerMenu, LazyLink, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

DrawerMenu = require('./drawer-menu');

Support = require('./../utility/support');

LazyLink = (function(_super) {
  var flg;

  __extends(LazyLink, _super);

  LazyLink.prototype.VISIBLE_CLASS = 'is-visible';

  LazyLink.prototype.DURATION = 300;

  LazyLink.prototype.$wrapper = $('#jsi-lazy-link');

  LazyLink.prototype.$trigger = LazyLink.prototype.$wrapper.find('a');

  LazyLink.prototype.$target = $('.jsc-lazy-link-target');

  flg = false;

  function LazyLink() {
    this.extend(new Support());
    this.event = this.isEvent();
    this.attachEvent();
  }

  LazyLink.prototype.attachEvent = function() {
    this.$trigger.on(this.event, (function(_this) {
      return function(e) {
        e.preventDefault();
        _this.getURL(e.currentTarget);
        _this.closeSlide();
        return _this.invertFlg();
      };
    })(this));
    this.$targetContents.on('webkitTransitionEnd transitionend', (function(_this) {
      return function() {
        if (_this.flg) {
          _this.fadeOut();
          return _this.toLink();
        }
      };
    })(this));
    return this.$window.on('load', (function(_this) {
      return function() {
        return _this.fadeIn();
      };
    })(this));
  };

  LazyLink.prototype.invertFlg = function() {
    return this.flg = !this.flg;
  };

  LazyLink.prototype.getURL = function(target) {
    return this.URL = $(target).attr('href');
  };

  LazyLink.prototype.toLink = function() {
    return setTimeout((function(_this) {
      return function() {
        return location.href = _this.URL;
      };
    })(this), this.DURATION);
  };

  LazyLink.prototype.fadeOut = function() {
    return this.$target.removeClass(this.VISIBLE_CLASS);
  };

  LazyLink.prototype.fadeIn = function() {
    return setTimeout((function(_this) {
      return function() {
        return _this.$target.addClass(_this.VISIBLE_CLASS);
      };
    })(this), 0);
  };

  return LazyLink;

})(DrawerMenu);

module.exports = LazyLink;



},{"./../utility/support":7,"./drawer-menu":2}],4:[function(require,module,exports){
var Loading;

Loading = (function() {
  Loading.prototype.ACTIVE_CLASS = 'is-active';

  Loading.prototype.DURATION = 300;

  Loading.prototype.$window = $(window);

  Loading.prototype.$targetHeader = $('#jsi-loading-header');

  Loading.prototype.$targetBg = $('#jsi-loading-bg');

  Loading.prototype.$target = $('#jsi-loading-title, #jsi-loading-logo, .jsc-loading-icon');

  function Loading() {
    this.getWindowSize();
    this.setBgPosition();
    this.addActiveClass();
    this.attachEvent();
  }

  Loading.prototype.attachEvent = function() {
    return this.$window.on('resize', (function(_this) {
      return function() {
        _this.getWindowSize();
        return _this.setBgPosition();
      };
    })(this));
  };

  Loading.prototype.getWindowSize = function() {
    this.windowHeight = this.$window.height();
    return this.windowWidth = this.$window.width();
  };

  Loading.prototype.setBgPosition = function() {
    return this.$targetBg.add(this.$targetHeader).height(this.windowHeight).end().width(this.windowWidth);
  };

  Loading.prototype.addActiveClass = function() {
    return setTimeout((function(_this) {
      return function() {
        return _this.$target.addClass(_this.ACTIVE_CLASS);
      };
    })(this), this.DURATION);
  };

  return Loading;

})();

module.exports = Loading;



},{}],5:[function(require,module,exports){
var SmoothScroll, Support,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Support = require('./../utility/support');

SmoothScroll = (function(_super) {
  __extends(SmoothScroll, _super);

  function SmoothScroll() {
    this.DURATION = 800;
    this.EASING = 'swing';
    this.$target = $('html, body');
    this.$trigger = $('#jsi-smooth-scroll');
    this.event = this.isEvent();
    this.attachEvent();
  }

  SmoothScroll.prototype.attachEvent = function() {
    return this.$trigger.on(this.event, (function(_this) {
      return function() {
        return _this.scrollTop();
      };
    })(this));
  };

  SmoothScroll.prototype.scrollTop = function() {
    return this.$target.animate({
      scrollTop: 0
    }, this.DURATION, this.EASING);
  };

  return SmoothScroll;

})(Support);

module.exports = SmoothScroll;



},{"./../utility/support":7}],6:[function(require,module,exports){
var Inheritance,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Inheritance = (function() {
  var moduleKeywords;

  function Inheritance() {}

  moduleKeywords = ['extended', 'included'];

  Inheritance.prototype.extend = function(obj) {
    var key, value, _ref;
    for (key in obj) {
      value = obj[key];
      if (__indexOf.call(moduleKeywords, key) < 0) {
        this[key] = value;
      }
    }
    if ((_ref = obj.extended) != null) {
      _ref.apply(this);
    }
    return this;
  };

  Inheritance.prototype.include = function(obj) {
    var key, value, _ref;
    for (key in obj) {
      value = obj[key];
      if (__indexOf.call(moduleKeywords, key) < 0) {
        this.prototype[key] = value;
      }
    }
    if ((_ref = obj.included) != null) {
      _ref.apply(this);
    }
    return this;
  };

  return Inheritance;

})();

module.exports = Inheritance;



},{}],7:[function(require,module,exports){
var Support;

Support = (function() {
  var browser, userAgent;

  function Support() {}

  userAgent = window.navigator.userAgent.toLowerCase();

  browser = null;

  Support.prototype.isWindows = function() {
    return userAgent.indexOf('win') !== -1;
  };

  Support.prototype.isMac = function() {
    return userAgent.indexOf('mac') !== -1;
  };

  Support.prototype.isiPhone = function() {
    return userAgent.indexOf('iphone') !== -1;
  };

  Support.prototype.isiPad = function() {
    return userAgent.indexOf('ipad') !== -1;
  };

  Support.prototype.isiOS = function() {
    return this.isiPhone() || this.isiPad();
  };

  Support.prototype.isBrowser = function() {
    if (userAgent.indexOf('trident/7') !== -1) {
      return browser = 'ie11';
    } else if (userAgent.indexOf('chrome') !== -1) {
      return browser = 'chrome';
    } else if (userAgent.indexOf('safari') !== -1) {
      return browser = 'safari';
    } else if (userAgent.indexOf('firefox') !== -1) {
      return browser = 'firefox';
    }
  };

  Support.prototype.isEvent = function() {
    var event;
    return event = 'ontouchstart' in window ? 'touchend': 'click';
  };

  return Support;

})();

module.exports = Support;



},{}]},{},[1])


//# sourceMappingURL=data:application/json;base64,